---
- name: Deploy and Configure LLDP on Linux Servers
  hosts: all
  become: yes
  
  vars:
    lldp_package: lldpd
    lldp_service: lldpd
    lldp_socket_group: lldpd
    
  tasks:
    - name: Install LLDP daemon on Debian/Ubuntu
      apt:
        name: "{{ lldp_package }}"
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"
      
    - name: Install LLDP daemon on RedHat/CentOS
      yum:
        name: "{{ lldp_package }}"
        state: present
      when: ansible_os_family == "RedHat"

    - name: Create lldpd group for socket access
      group:
        name: "{{ lldp_socket_group }}"
        state: present
        system: yes

    - name: Add current user to lldpd group
      user:
        name: "{{ ansible_user }}"
        groups: "{{ lldp_socket_group }}"
        append: yes
      when: ansible_user is defined and ansible_user != 'root'

    - name: Clear lldpd config (Debian/Ubuntu)
      copy:
        content: |
          # Managed by Ansible
          # Basic LLDP configuration
          # Note: -g flag not supported in lldpd 1.0.x, using systemd override instead
          DAEMON_ARGS=""
        dest: /etc/default/lldpd
        mode: '0644'
        backup: yes
      when: ansible_os_family == "Debian"

    - name: Clear lldpd config (RedHat/CentOS)
      copy:
        content: |
          # Managed by Ansible
          # Basic LLDP configuration
          # Note: -g flag not supported in lldpd 1.0.x, using systemd override instead
          LLDPD_OPTIONS=""
        dest: /etc/sysconfig/lldpd
        mode: '0644'
        backup: yes
      when: ansible_os_family == "RedHat"

    - name: Create systemd override directory
      file:
        path: /etc/systemd/system/lldpd.service.d
        state: directory
        mode: '0755'

    - name: Create systemd override to fix socket permissions
      copy:
        content: |
          # Managed by Ansible
          # Fix socket permissions for non-root access
          # This is needed because lldpd 1.0.x doesn't support -g flag
          [Service]
          ExecStartPost=/bin/sh -c 'sleep 1; chgrp {{ lldp_socket_group }} /run/lldpd.socket; chmod g+rw /run/lldpd.socket'
        dest: /etc/systemd/system/lldpd.service.d/socket-permissions.conf
        mode: '0644'

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Ensure LLDP service is enabled and started
      systemd:
        name: "{{ lldp_service }}"
        enabled: yes
        state: restarted

    - name: Wait for service to stabilize and socket to be created
      wait_for:
        path: /run/lldpd.socket
        timeout: 10

    - name: Ensure socket has correct permissions
      file:
        path: /run/lldpd.socket
        group: "{{ lldp_socket_group }}"
        mode: '0660'

    - name: Ensure lldpcli binary is executable by all users
      file:
        path: /usr/sbin/lldpcli
        mode: '0755'
        owner: root
        group: root

    - name: Verify LLDP service is running
      systemd:
        name: "{{ lldp_service }}"
      register: lldp_status

    - name: Display LLDP service status
      debug:
        msg: "LLDP service is {{ lldp_status.status.ActiveState }}"

    - name: Test lldpcli access for non-root users
      command: lldpcli show chassis
      become: no
      become_user: "{{ ansible_user }}"
      register: lldpcli_test
      failed_when: false
      changed_when: false
      when: ansible_user != 'root'

    - name: Display lldpcli test result
      debug:
        msg: "{{ '✅ Non-root users can run lldpcli successfully' if lldpcli_test.rc == 0 else '⚠️  Note: Users may need to log out/in or run: newgrp ' + lldp_socket_group }}"
      when: ansible_user != 'root'
        
  handlers:
    - name: restart lldpd
      systemd:
        name: "{{ lldp_service }}"
        state: restarted
